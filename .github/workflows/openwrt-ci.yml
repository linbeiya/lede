name: Build lede Firmware

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

env:
  REPO_URL: https://github.com/linbeiya/lede.git
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ARCHITECTURE:
          - h68k  # Êîπ‰∏∫ÈÄÇÈÖç armvirt Êû∂ÊûÑ
          # ‰πüÂèØÁî® armvirt

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc wget unzip python3 python3-distutils
        sudo timedatectl set-timezone "$TZ"
        sudo apt-get clean

    - name: Apply diy-part1.sh (feeds modification)
      if: ${{ env.DIY_P1_SH != '' }}
      run: |
        chmod +x ${{ env.DIY_P1_SH }}
        ./${{ env.DIY_P1_SH }}

    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Apply diy-part2.sh (custom changes)
      if: ${{ env.DIY_P2_SH != '' }}
      run: |
        chmod +x ${{ env.DIY_P2_SH }}
        ./${{ env.DIY_P2_SH }}

    - name: Load .config from root
      run: |
        [ -f .config ] && echo "Using root .config"

    - name: Run make defconfig
      run: |
        make defconfig

    - name: Compile firmware
      run: |
        make -j$(nproc) || make -j1 V=s

    - name: Upload bin folder (all)
      if: env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: lede-bin-${{ matrix.ARCHITECTURE }}
        path: bin

    - name: Upload firmware only
      if: env.UPLOAD_FIRMWARE == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: firmware-${{ matrix.ARCHITECTURE }}
        path: bin/targets/*/*

    - name: Release firmware
      if: env.UPLOAD_RELEASE == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: firmware-${{ matrix.ARCHITECTURE }}-$(date +'%Y%m%d-%H%M')
        name: H68K lede firmware
        body: |
          ‚úÖ Ëá™Âä®ÁºñËØëÂÆåÊàê
          üìÖ Êó•Êúü: $(date +'%Y-%m-%d %H:%M')
          üíª Êû∂ÊûÑ: ${{ matrix.ARCHITECTURE }}
        files: bin/targets/*/*

    - name: Cleanup old workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1
        token: ${{ secrets.ACCESS_TOKEN }}
