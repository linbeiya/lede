name: Build lede Firmware for H68K with Debug

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'   # 每天北京时间 0 点触发

env:
  REPO_URL: https://github.com/linbeiya/lede.git
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc wget unzip python3 python3-distutils
        sudo timedatectl set-timezone "$TZ"
        sudo apt-get clean

    - name: Check root directory files
      run: |
        echo "根目录文件列表："
        ls -alh

    - name: Check .config existence and content
      run: |
        if [ -f "${{ env.CONFIG_FILE }}" ]; then
          echo ".config 文件存在，显示前20行："
          head -20 "${{ env.CONFIG_FILE }}"
        else
          echo "Error: .config 文件不存在！"
          exit 1
        fi

    - name: Apply .config
      run: |
        cp "${{ env.CONFIG_FILE }}" .config
        echo "已复制 .config，显示复制后文件前20行："
        head -20 .config

    # 暂时注释 DIY 脚本，避免影响测试
    # - name: Run DIY part 1 (before defconfig)
    #   if: ${{ env.DIY_P1_SH != '' }}
    #   run: |
    #     chmod +x "${{ env.DIY_P1_SH }}"
    #     ./"${{ env.DIY_P1_SH }}"

    - name: Run make defconfig
      run: make defconfig

    # - name: Run DIY part 2 (after defconfig)
    #   if: ${{ env.DIY_P2_SH != '' }}
    #   run: |
    #     chmod +x "${{ env.DIY_P2_SH }}"
    #     ./"${{ env.DIY_P2_SH }}"

    - name: Compile firmware
      run: |
        make -j$(nproc) V=s || make -j1 V=s

    - name: Upload bin directory
      if: env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-bin-h68k
        path: bin/

    - name: Clean up old workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1
        token: ${{ env.GITHUB_TOKEN }}
