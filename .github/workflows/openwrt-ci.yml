name: Build lede Firmware

on:
  workflow_dispatch:    # 手动触发
  schedule:
    - cron: '0 16 * * *'   # 每天北京时间凌晨0点触发编译（16点UTC）

env:
  REPO_URL: https://github.com/linbeiya/lede.git
  REPO_BRANCH: master          
  CONFIG_FILE: .config         
  DIY_P1_SH: diy-part1.sh      
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ARCHITECTURE:
          - x86
          - rk33xx
          - rk35xx

    steps:
    - name: Checkout lede repository
      uses: actions/checkout@v3
      with:
        repository: linbeiya/lede
        ref: ${{ env.REPO_BRANCH }}

    - name: Setup build environment and install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc wget unzip python3 python3-distutils
        sudo timedatectl set-timezone "$TZ"
        sudo apt-get clean

    - name: Load custom feeds config (if exists)
      run: |
        if [ -f "feeds.conf" ]; then
          echo "Using custom feeds.conf"
        else
          echo "Using default feeds.conf"
        fi

    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Copy config file
      run: |
        if [ -f "${{ matrix.ARCHITECTURE }}/$CONFIG_FILE" ]; then
          cp "${{ matrix.ARCHITECTURE }}/$CONFIG_FILE" .config
        else
          echo "配置文件不存在，使用默认config"
        fi

    - name: Build firmware
      run: |
        make -j$(nproc) V=s || make -j1 V=s

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-${{ matrix.ARCHITECTURE }}
        path: bin/

    - name: Cleanup old workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1
        token: ${{ secrets.ACCESS_TOKEN }}
